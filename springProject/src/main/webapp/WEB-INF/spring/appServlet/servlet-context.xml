<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- => 서버 켜질때마다 'com.kh.spring' 에 있는 파일 전부 스캔해서 어노테이션 달려있는거 무조건 빈 등록시킴 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.spring" />
	
	<!-- 
		* 사용자가 어떤 url로 요청시 해당 이 문서가 읽혀진다고 보면 됨!
		HandlerMapping 을 통해서 어떤 url로 요청시, 어떤 Controller를 구동시킬건지 알아내야함
		
		1. 요청때마다 실행될 Controller 클래스들이 빈으로 등록되어있어야함(@어노테이션 등록)
		2. 어떤 url로 요청시 어떤 Controller를 구동시킬껀지 매핑시키는 HandlerMapping 관련한 클래스를 빈으로 등록해야함
		
		// 1번
		<beans:bean class="com.kh.spring.member.controller.LoginController" id="loginController"/>
		<beans:bean class="com.kh.spring.member.controller.LogoutController" id="logoutController"/>
		
		// 2번
		<beans:bean class="org.springframework.servlet.handler.SimpleUrlHandlerMapping">
			<beans:property name="mapping">
				<beans:props>
					<beans:prop key="login.me">loginController</beans:prop>
					<beans:prop key="logout.me">logoutController</beans:prop>
				</beans:props>
			</beans:property>
		</beans:bean>
	 -->
	 
	 <!-- 
	 	위의 방식이 바로 xml 방식
	 	=> 장점 : xml 문서 내에 한 눈에 볼 수 있어서 관리의 편의성이 높음
	 	=> 단점 : 단, bean 개수가 많아지면 오히려 관리하기 어려움 / 여러 개발자가 같은 xml 파일을 수정하면 충돌이 발생될 수 있음
	  -->
	
	<!-- Interceptor 등록 -->
	<interceptors>
		<interceptor>
			<mapping path="/myPage.me"/>
			<mapping path="/update.me"/>
			<mapping path="/enrollForm.bo"/>
			<beans:bean class="com.kh.spring.common.interceptor.LoginInterceptor" id="loginInterceptor"/>
		</interceptor>
	</interceptors>
	
	
</beans:beans>
